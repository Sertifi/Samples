public class CandidateTriggerHandler {
    public static void sendEContract(Map<Id,Candidate__c> newMap, Map<Id,Candidate__c> oldMap){
        Id eContractId ;
        Sertifi2_0__TestContract__c newContract = new Sertifi2_0__TestContract__c ();
        for (Candidate__c candid : oldMap.values()){
            if (newMap.get(candid.Id).Sertifi2_0__Send_Offer__c && (oldMap.get(candid.Id).Sertifi2_0__Send_Offer__c != newMap.get(candid.Id).Sertifi2_0__Send_Offer__c)	 ){
                newContract.Name = 'Test Invites 1';
                newContract.Sertifi2_0__Message__c = 'Custom invite message';
                newContract.Sertifi2_0__Sign_Type__c = 'Electronically';
                newContract.Sertifi2_0__Candidate_lookup__c = candid.Id;
                newContract.Sertifi2_0__Open__c = 1;
                newContract.Sertifi2_0__Settings__c = 'Settings';
                insert newContract;
                
                Sertifi2_0__EDocument__c signDoc = new Sertifi2_0__EDocument__c(
                    Sertifi2_0__TestContract__c = newContract.id,
                    Sertifi2_0__Name__c = 'Test doc',
                    //Sertifi2_0__Sertifi_ID__c = 'qwerty',
                    Sertifi2_0__Number_Signed__c = 0,
                    Sertifi2_0__Document_Type__c = 'Signing Document');
                insert signDoc;
                
                //Creating test document on fly
                String pdfContent = 'This is a test string';
                Attachment attachmentPDF = new Attachment();
                attachmentPdf.parentId = signDoc.id;
                attachmentPdf.name = 'Generated.pdf';
                attachmentPdf.body = blob.toPDF(pdfContent);
                insert attachmentPDF;
                
                Contact tempContact = [select id,name,email from Contact where email = 'placeholder@sertifi.com' LIMIT 1];
                Sertifi2_0__ContractContactJunction__c signer = new Sertifi2_0__ContractContactJunction__c(
                    Sertifi2_0__Contact__c = tempContact.id,
                    Sertifi2_0__TestContract__c = newContract.id,
                    Sertifi2_0__Signer_Order__c = 1,
                    Sertifi2_0__Level_Name__c = '1st Signer',
                    Sertifi2_0__Email__c = 'divyabiyyapu@gmail.com');
                insert signer;
                
                //Creating payment objects
                Sertifi2_0__Payment__c payment = new Sertifi2_0__Payment__c();
                payment.Name = 'Test Payment';
                payment.Sertifi2_0__EContract__c = newContract.id;
                payment.Sertifi2_0__Amount__c = 10.25;
                payment.Sertifi2_0__Operation__c = 'Pay'; //Default is 'Pay', set to 'Authorize' for authorizations
                payment.Sertifi2_0__DueDate__c = date.today().addDays(30); //expires after 30 days
                insert payment;
                
                //Creating additional parameters
                Sertifi2_0__EContract_Parameter__c parameter = new Sertifi2_0__EContract_Parameter__c();
                parameter.Sertifi2_0__EContract__c = newContract.id;
                parameter.Name = 'fileexternalid1';
                parameter.Sertifi2_0__Value__c = 'file externalid data';
                insert parameter;
            }
        }
        
            callSertifi(newContract.Id);
    
        
    }
    @future(callout=true)
    public static void callSertifi(Id econtractId){
        Sertifi2_0__SertifiSettings__c settings = Sertifi2_0__SertifiSettings__c.getValues('Settings');
        string results = Sertifi2_0.SertifiSFAPI.sendEContractToSertifi(eContractId, settings);
        System.debug('The result is  '+results);
    }

}